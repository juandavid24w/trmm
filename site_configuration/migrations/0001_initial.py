# Generated by Django 5.0.4 on 2024-05-08 04:49

import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Backup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=127, verbose_name="Nome")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "do_db_dump",
                    models.BooleanField(
                        default=True, verbose_name="Inclui banco de dados?"
                    ),
                ),
                (
                    "do_media_dump",
                    models.BooleanField(default=True, verbose_name="Inclui mídias?"),
                ),
                (
                    "db_dump",
                    models.FileField(
                        blank=True, upload_to="", verbose_name="Arquivo de dados"
                    ),
                ),
                (
                    "media_dump",
                    models.FileField(
                        blank=True, upload_to="", verbose_name="Arquivos de mídias"
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup",
                "verbose_name_plural": "Backups",
            },
        ),
        migrations.CreateModel(
            name="DocumentationPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordem")),
                ("title", models.CharField(max_length=100, verbose_name="Título")),
                (
                    "text",
                    tinymce.models.HTMLField(
                        blank=True, null=True, verbose_name="Mensagem"
                    ),
                ),
            ],
            options={
                "verbose_name": "Página de documentação",
                "verbose_name_plural": "Documentação",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="EmailConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activated",
                    models.BooleanField(
                        default=False,
                        help_text="Só ative essa opção depois de testar as configurações de email no botão ao lado. Quando ativado, as notificações vão ser enviadas por email e será possível a usuários redefinir suas senhas.",
                        verbose_name="Email está ativado?",
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        default="smtp.gmail.com", max_length=128, verbose_name="Host"
                    ),
                ),
                (
                    "port",
                    models.PositiveIntegerField(default=587, verbose_name="Senha"),
                ),
                (
                    "username",
                    models.CharField(
                        default="example@gmail.com",
                        max_length=128,
                        verbose_name="Usuário",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        default="1234", max_length=128, verbose_name="Senha"
                    ),
                ),
                ("use_tls", models.BooleanField(default=True, verbose_name="Usar TLS")),
                (
                    "use_ssl",
                    models.BooleanField(default=False, verbose_name="Usar SSL"),
                ),
                (
                    "timeout",
                    models.IntegerField(
                        blank=True, default=120, null=True, verbose_name="Timeout"
                    ),
                ),
                (
                    "from_email",
                    models.EmailField(
                        default="admin@example.com",
                        max_length=254,
                        verbose_name="Email remetente",
                    ),
                ),
                (
                    "signature",
                    tinymce.models.HTMLField(
                        blank=True, null=True, verbose_name="Assinatura dos email"
                    ),
                ),
            ],
            options={
                "verbose_name": "Configurações de email",
            },
        ),
        migrations.CreateModel(
            name="SiteConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_header",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Cabeçalho do site",
                    ),
                ),
                (
                    "site_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Título do site",
                    ),
                ),
                (
                    "index_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Título da página principal",
                    ),
                ),
                (
                    "administration_header",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Cabeçalho da administração do site",
                    ),
                ),
                (
                    "favicon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="site_configuration",
                        verbose_name="Favicon",
                    ),
                ),
                (
                    "welcome_msg",
                    tinymce.models.HTMLField(
                        blank=True, null=True, verbose_name="Mensagem de boas vindas"
                    ),
                ),
                (
                    "goodbye_msg",
                    tinymce.models.HTMLField(
                        blank=True, null=True, verbose_name="Mensagem de despedida"
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração do site",
            },
        ),
        migrations.AddConstraint(
            model_name="backup",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("do_db_dump", True), ("do_media_dump", True), _connector="OR"
                ),
                name="db_or_media",
                violation_error_message="Inclua banco de dados ou mídias",
            ),
        ),
        migrations.AddConstraint(
            model_name="backup",
            constraint=models.UniqueConstraint(fields=("name",), name="unique_name"),
        ),
    ]
